name: CD

on:
  push:
    branches:
      - main
      - release
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - name: Example deploy job
        run: echo "This is an example deploy job. Uncomment the deploy job in .github/workflows/cd.yml"
  #build:
  #  name: Build
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: read
  #    packages: write
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4

  #    - name: Set up Docker Buildx
  #      uses: docker/setup-buildx-action@v3

  #    - name: Extract metadata (tags, labels) for Docker
  #      id: meta
  #      uses: docker/metadata-action@v5
  #      with:
  #        images: ghcr.io/${{ github.repository }}

  #    - name: Login to GitHub Container Registry
  #      if: github.event_name != 'pull_request'
  #      uses: docker/login-action@v3
  #      with:
  #        registry: ghcr.io
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}

  #    - name: Build and push
  #      uses: docker/build-push-action@v6
  #      env:
  #        DOCKER_BUILD_SUMMARY: false
  #        DOCKER_BUILD_RECORD_UPLOAD: false
  #      with:
  #        context: .
  #        push: ${{ github.event_name != 'pull_request' }}
  #        tags: ${{ steps.meta.outputs.tags }}
  #        labels: ${{ steps.meta.outputs.labels }}
  #        cache-from: type=gha
  #        cache-to: type=gha,mode=max
  #        #secrets: |
  #        #  "COMPOSER_AUTH_JSON=${{ secrets.COMPOSER_AUTH_JSON }}"
  #
  #deploy:
  #  name: Deploy
  #  runs-on: ubuntu-latest
  #  needs: build
  #  if: github.event_name != 'pull_request'
  #  steps:
  #    - name: Invoke Deployment
  #      uses: inrage/webhook-action@v1
  #      with:
  #        webhook_production: '${{ secrets.WEBHOOK_URL }}'
  #        webhook_release: '${{ secrets.STAGING_WEBHOOK_URL }}'
